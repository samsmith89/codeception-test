# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#

version: 2.1
executors:
  docker-executor:
    docker:
      - image: circleci/node

jobs:
  test_plugin:
    executor: docker-executor
    steps:
      - setup_remote_docker
      - run:
          name: Set up network
          command: |
            docker network create wp-network
      - run:
          name: Set up database
          command: |
            docker run -d \
              -e MYSQL_ROOT_PASSWORD=1234 \
              -e MYSQL_DATABASE=wordpress \
              --name db \
              --network wp-network \
              mysql:5.7
      - run:
          name: Setup WordPress
          command: |
            docker run -d \
              -e WORDPRESS_DB_HOST=db:3306 \
              -e WORDPRESS_DB_USER=root \
              -e WORDPRESS_DB_PASSWORD=1234 \
              -e WORDPRESS_DB_NAME=wordpress \
              -e WORDPRESS_CONFIG_EXTRA="define('WP_SITEURL', 'http://' . \$_SERVER['HTTP_HOST']); define('WP_HOME', 'http://' . \$_SERVER['HTTP_HOST']);" \
              --name wp-container \
              --network wp-network \
              wordpress
      - run:
          name: Install WordPress
          command: |
            docker run -it --rm \
              --volumes-from wp-container \
              --network wp-network \
              wordpress:cli core install \
                --url=localhost \
                --title=test \
                --admin_user=admin \
                --admin_password=admin \
                --admin_email=foo@bar.com
      - run:
          name: Install Relative URL Plugin
          command: |
            docker run -it --rm \
              --volumes-from wp-container \
              --user xfs \
              --network wp-network \
              wordpress:cli plugin install relative-url \
                --activate \

workflows:
  test:
    jobs:
      - test_plugin
      # And use WP-CLI to activate it
#      - ./wp-cli.phar plugin activate classic-editor --path=wordpress
#      - checkout
#
#      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
#      - run: sudo docker-php-ext-install zip
#
#      # Download and cache dependencies
#      - restore_cache:
#          keys:
#            # "composer.lock" can be used if it is committed to the repo
#            - v1-dependencies-{{ checksum "composer.json" }}
#            # fallback to using the latest cache if no exact match is found
#            - v1-dependencies-
#
#      - run: composer install -n --prefer-dist
#
#      - save_cache:
#          key: v1-dependencies-{{ checksum "composer.json" }}
#          paths:
#            - ./vendor
#      - restore_cache:
#          keys:
#            - node-v1-{{ checksum "package.json" }}
#            - node-v1-
#      - run: yarn install
#      - save_cache:
#          key: node-v1-{{ checksum "package.json" }}
#          paths:
#            - node_modules
#
#      # prepare the database
##      - run: touch storage/testing.sqlite
##      - run: php artisan migrate --env=testing --database=sqlite_testing --force
#
#      # run tests with phpunit or codecept
#      #- run: ./vendor/bin/phpunit
#      - run: ./vendor/bin/codecept build
#      - run: ./vendor/bin/codecept run acceptance
